Java3

●コレクションフレームワーク
List
Map
Set

・List
複数の要素の順番をほじする。
配列のかわりとして利用することができる。
配列は宣言時に個数を指定する必要があるが、
リストの場合は後から要素数を変更することができる。
ArrayList   要素へのアクセスが高速
LinkedList  要素の追加や削除が高速

・Map
HashMap　登録順は意識されずに記憶される
TreeMap　登録したキーが昇順で記憶される
LinkedHashMap　登録した順番で記憶される

・Set
複数要素を持たない要素の集合
HashSet　登録順は意識されずに記憶される
TreeSet　登録したキーが昇順で記憶される
LinkedHashSet　登録した順番で記憶される


●カプセル化とは
特定のクラスからのみの呼び出しに応じる
書き換えができない
など、アクセス制御をかけることにより間違いや悪意による利用を停止する。
想定しない利用が発生したとき、その原因箇所を区呈するための仕組み。

○厳しさ、かき方、指定範囲

厳しい↑

private(private)自分のクラスのみ
package private（何も書かない）自分のパッケージのみ
protected(protected)自分と同じパッケージか、自分を継承したクラス

public(public)すべてのクラス

ゆるい↓


publicなどをアクセス修飾子という。範囲をスコープという。

-----
voidは処理を行うだけのときにつける。
何かを表示させるわけではないとき。


○セッターとゲッター
読み取りget
登録set

-----
this.　は「そのクラスの中の」


●継承
public class　継承先クラス名 extends 継承元クラス名

継承元をスーパークラス、親クラス
継承先をサブクラス、子クラス


○オーバーライド
子クラスから親クラスへオーバーライド
public void play(){System.out.println("書き換え内容");}


●実装
ルールを作り、それに沿ってクラスを作成していくこと
クラス：処理をプログラミング
インターフェース：ルールをプログラミング

implements ＊＊　の形

例）Phoneから敬称、Mp3PlayerとNewFunctionをインターフェースとして実装
public class SmartPhone extends Phone implements Mp3Player,NewFunction {






















