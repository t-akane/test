自習時間のメモ


PWはsuidoochahanzo
-------------------------------------------
覚えておく必要のあること
OK・Javaとデータ接続
OK・sqlのcrud
OK・try、catch
・コマンドプロンプト
データ並べ替え
OK テーブル結合
・コレクションフレームワーク
リスト、マップの特に格納、取得するメソッド

・struts２　解説きく、ログイン認証フレームワーク演習
-------------------------------------------
演習でよくわかっていないもの

sessionとArraylist
ゲッターとセッター
概要はわかったけど、
どっちにセットしてどっちにゲットするの

-------------------------------------------
●java講義　第７回から
クラスについて
クラスは基本的な型、たいやきにおける金型のようなもの

クラスの中にメンバがいる
メンバにはフィールドや、メソッドがある
フィールドにもメソッドにもその中に書き込める

クラス、メンバ、メンバの机の上にも何かのってたり動いていたりする
教室のようなイメージ

座っているのは人というよりはロボだけど

オブジェクトクラスというのは、原本クラス


●java講義　第８回から
メンバのアクセス制御とカプセル化

・変数には寿命と有効範囲がある
・ブロック括弧の中で定義した変数はその中でのみ有効

フィールドというのは、人間で言うと臓器
メソッドは表出して何を行動しているかという外側の部分

カプセル化の手順・・
クラスの中の変数に対してprivateを設定する

それを外部から取得するゲッターとセッターを設定する
カプセル化の中にも外にも必要

フィールドで変数を設定。
これは原本なのでいじられることはない。
そこをインスタンス化において設定ができるように
中にセッター、ゲッター
外側からインスタンス内でその変数を使うためのセッター、ゲッター

セッターにif分をつければ、何文字以内などの条件式をつけることも可能


●java講義　第９回から
メソッドのオーバーロードとコンストラクタ、this演算子


●java講義　第１０回から
クラスとインスタンス
インスタンス化することを、実体化するという。
staticがつく変数のことをクラス変数という。
クラスで共通して使用する変数のこと。

インスタンス化は、独立して何個も作られる。
クラス変数は共通したひとつだけ。
複数のインスタンスに共通して動くのを
クラスメソッドという（=static）？

たとえば・・・
humanクラスを作成したときに、
名前や年齢などは固有なのでstaticではない。
共通するものとしては、
・今まで何個のhumanがつくられたか？
などは、すべてのインスタンスに共通する結果となる。

参照
https://nobuo-create.net/java-beginner-21/

いちばんかんたんなjavaシリーズがわかりやすい

こういったstatic名ものは何に日もづいているか？
インスタンスではなく、クラス自体に日もづいていると考える。

金型があって、そこから生み出されるインスタンスがあって、
それをする装置の中に記録されているみたいなかんじ

クラス名.メンバ
でアクセスできる

ほかにも、腕が2本とか変更の余地のないものにも使ったりもできる。
インスタンスの固有ではなくクラスの固有の値になる


●java講義　第１１回から
クラスの利用
ラッパークラス
既存のクラスを利用して、やりやすくする
intは値渡し
クラス型は参照渡し（メモリの番地を渡すようなイメージ
クラスライブラリを活用すれば、効率的にプログラミングできる。



●java講義　第１２回から
クラスの継承

voidが入っているところは型をいれるところ
たとえば・・・booleanとか
戻り値の方を指定するところ。



●java講義　第１２回から
クラスの継承のおきて

継承するときに大事なこと
protectedというクラスに注意
自分のクラス、サブクラスでつかえる

スーパーで定義されているものを子クラスで再定義することを
オーバーライドという。
final就職氏をつけるとオーバーライドを禁止できる。

this.と同じようにsuper.とやると親クラスから引用することができる

●16回目　例外処理
コンパイル時に発生したエラーに対する処理
ここで出てくるのがtry、catch！！何回も書いた

tryで例外を監視する
catchで例外発生時の処理
catchは複数定義できる

finally
例外発生の有無にかかわらず実行される

thorws

-------------------------------------------
コマンドプロンプトの復習
★習得目的
テーブル並べ替え、結合


前提として
・データベースを操作できるもの
代表的なコマンド
select,insert,desc
・DBをいじるときは必ずザンプも起動させておくこと

create、drop

出てくる用語、覚えておくもの

カラム
アイテム

コマンドプロンプトで作成をするときは
テーブル名、カラム名、データ型を指定している

作成した跡に変更するときに使うコマンド
ALTER TABLE


・DBの種類
関係方
階層型
ネットワーク型
ドキュメント型

・DBの構造
テーブル　表
レコード　行　横　一件分のデータ
フィールド　列　項目名。構成する目的


●テーブル結合　141p〜
種類

・内部結合(innner join)
・外部結合
　左外部結合(left outer join)outerは略されることもある
　右外部結合(right outer join)
　完全外部結合(full outer join)
・交差結合(cross join)


・内部結合
結合するテーブルの両方にて一致するレコードのみ
重なるところだけ
AにあってBにないもの
BにあってAにないもの
すべて切り落とされる
両方に存在するデータだけ結合される

・外部結合
重複するデータに加えて、
どちらかにしか存在しないものも含める

右、左は単純に式の中で右に置くか左に置くか
左は左メイン
右は右メイン

完全結合
sqlを使用している場合UNIONを使用する

どちらもすてない。どちらかにデータがあればOK。


-------------------------------------------
コレクションフレームワークの復習
★習得目的
リスト、マップの特に格納、取得するメソッド

基本
List　　順番を持つ。インデックス番号により、要素を操作する
Map	
Set	重複を許可しない。

そもそも、コレクションフレームワークとは。。
コレクション（オブジェクトの集合）を操作するために用意されたJava標準のAPIです。 用途に応じて、リスト（List）、Set（セット）、Map（マップ）、Queue（キュー）といったインターフェイスを使い分けることができます。

java.util.List	順序付きリストのインターフェース
java.util.ArrayList	配列を用いたjava.util.Listの実装


ArrayListに格納するとき


・むこうの教室で自分のWSつくる



インポート
既存のプロジェクトをワークｽﾍﾟｰｽへ
参照
テストフォルダ選ぶ
オプションの、プロジェクトをワークｽﾍﾟｰｽへ・・をはずす










