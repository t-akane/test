progate
akaneiro7
peach..gmail
---------------------------------------
System.out.println();
は、printlnと書いてtab（タブ）キーを押すと変換されます。
---------------------------------------
変数の上書き
データ型をつけてやろうとすると「定義」になるのではじかれる
変数名だけで＝すると上書きできる

自己代入
＝の左にも右にも同じ変数があること。
代入という意味なので特に問題はない。

自己代入の省略
i+=1;
i-=1;
i*=1;
i/=1;
i%=2;

+1 -1のとき
i++
i--

自動型変換
Stringにはさんで+で文字連結されたintは自動でStringになる
intとdoubleがまざった計算式は自動的にdoubleになる

◆フェーズ2◆
真偽値
比較演算子を用いると、自動でboolean

条件分岐
if(条件式){
}
条件式がtrueだったら、ブロックの中が実行される。
条件式はもちろん式を書いてもいいし、trueやfalseをそのまま打ち込んでもいい

if(条件式){}
elseif(条件式){}
else{}

スイッチ
switch(分岐式){
case 1:
ほにゃらら
break;
case 2:
ほにゃらら
break;

default:
ほにゃらら
break;
}

whileやfor文で、
終わらせたいときはbreak;
スキップしたいときはcontinue;

配列
int[] 変数名={1,2,3};
String[] 変数名={"a","b","c"};
の形をとる。
0からインデックス番号が振られている。
インデックス番号で指定をしたい場合は
変数名[0]
などで呼び出すことができる。
特定の値の上書きも、上記
変数名[0]="上書き名"


メインメソッドの中にトリガーを集約しておく
メソッドは他で書いておくと可読性が増す
メソッドの呼び出しは
メソッド名（）；だけ
System.out.println(””);

引数と仮引数
メソッドに引数を渡すには、まず引数を受け取れるメソッドが必要
そのためには、メソッドの定義部分で、引数を入れるための箱となる変数「仮引数」を指定する。

引数を複数設定したいときはコンストラクタを使用する

=は等しいことを表すのではなく代入だから、
行を追って違う値を代入することもできる

その値を基準にして足し引きなどはよくある話

i=i+1は
i+=1であらわすことができる

戻り値について
メソッドの中でreturnを使うと、returnの戻り値をメソッドの中に返すことができる。
戻り値があるメソッドは戻り値のデータ型も指定する。

基本的にメソッドは同盟のものは定義できない
ただ、コンストラクタが異なっていれば同じ名前でも定義できる
これをオーバーロードという。
