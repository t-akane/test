javascriptのメモ

・データ型とは
数値
文字列
論理値（True/False）

・変数
var *=*;　
document.write("*");
変数は数字からはじめることはできない。
変数に使える記号は＿のみ。

変数を書くときは（）の中に直接でOK。
文字列や、<br>などを書く得意は””で囲まないとエラーになる。

四則演算
＋-*/
%は、割り算したときのあまり

加算子（インクリメント）
前置加算子→　変数の値に１を加える。　/++a
後置加算子→　変数を元に戻す。元に戻した値に１を加える。/a++
まず元の数値を表示する。
仮想的に1を加えるだけで、writeコマンドがなければ表示はされない。

比較演算子の種類
a>1　1より大きい
a>=1　1以上
a==1　1と等しい
a!=1　1と等しくない
a<>1　1と等しくない

if(条件){コマンド();}

論理演算し
&&　→and「a,bともにtrueのとき、処理を実行」
||　→or「a,bどちらかtrueのとき、処理を実行」
!　→not「aがtrueのとき、処理は実行しない」

rlse if

if〜〜
else if〜〜
＊if条件でfalseだった場合のみ、elseの処理内容が実行される。
else ifでなく、elseだけの場合は、if条件に当てはまらなかった場合すべてを指す。

var test1=80;
var test2=96;

if(test1>=80){document.write("1-合格");}
---
if(test1>=80)
 {if(test2>=80){document.write("1.2合格");}
 else if(test2>=90){document.write("2-合格");}
 else{document.write("1.2不合格");}}
最後のとじかっこ2つ連続を忘れないこと。

switch文
等しいときに利用
switch(a){
case  0:
document.write("aは0");
break;
case  1:
document.write("aは1");
break;
default:
document.write("いずれにも該当しない");}

繰り返し文
for(初期値;条件式;増減式;){処理内容}

よくある使い方
i++ １ずつ増加
i+=2 ２ずつ増加

for(var month=1; month<=12; month++)
{document.write(month);
document.write("月");}

中に入れるパターン　ネスト
for(var b=1; b<=9; b++)
{for(var c=1; c<=9; c++)
 {document.write(b*c);}
 document.write("→"+b+"の段<br>");}

while文
初期値；
while(条件式)処理内容;増減式;}

var abc=1;
while(abc<=10)
 {if(abc % 2 ==0)
  {document.write(abc+"<br>");}
 abc++;}

配列

変数ごとのグルーピング
変数（箱の番号）→keyまたは添え字
変数（代入した値）→value、値
箱と中の値をあわせて→element、要素

書き方
var myoji=["田中","高橋","斉藤"];
document.write(myoji);
→ぜんぶでる
myojiのあとに[1]など、通し番号を指定すると特定の値だけ。一番左hゼロ。

delete myoji[0];//消える
myoji[0]="新田中";//リライト

箱の名前を通し番号ではないものに変える。
var myoji=["A組":"田中","B組":高橋"","C組":"斉藤"]
それぞれ組が箱の名前になった。

myoji.unshift("鈴木");
配列の一番先頭にわりこみ。
myoji.unshift("山田");
配列の最後尾に追加。
myoji.shift();
配列の先頭だけを削除。
myoji.pop();
配列の最後尾だけを削除。

document.write(myoji.slice(1,2));
スライスは指定した2つの値の間のvalueだけ返す
ひとつめは以上（含める）、２つめは未満（含めない）

関数

function hello(name)
 {return name+"さん。こんにちわ";}
　document.write(hello("高橋"));
　document.write("<br>");
　document.write(hello("鈴木"));
　document.write("<br>");

















