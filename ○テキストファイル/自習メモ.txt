自習メモ
気になったところを断片的に
------------------------------------------------------
progate
akaneiro7
peach..gmail
------------------------------------------------------
そもそもStringというのは、そのインスタンスが保持する文字列を書き換える事ができない
Stringクラスは文字列を保持する為に、char配列を使っています。
private final char value[];
これが、Stringクラスの文字列を保持する為のフィールドなんですが、見ての通り、「final」という修飾子がついています。これは、上書き禁止を表す修飾子です。


Humanクラスがあったとして
Human human; //変数humanを宣言
human=new Human();　//インスタンス化、そしてそのインスタンスを呼ぶ

これを一度に行うと
Human human=new Human();

クラスをインスタンス化（new）した時に、何の値も入れられていないメンバ変数は、勝手に初期化されるようになっているからです。その勝手に初期化する際に、intやdaubleなどの数値系の型は0（及び0.0）に、boolean型はfalseに、Stringのような参照型はnullに初期化されるというルールがあるんです。

変数の名前
仮引数の変数名をこんな意味のないものにしてしまうと、可読性が落ちますよね？aって何だったっけ？ってことになり兼ねません。もちろんプログラム的には問題ないですが。

Human human = new Human();
　デフォルトコンストラクタを呼ぶにはnewする時に引数を渡してはいけません。デフォルトコンストラクタは引数を受け取らないコンストラクタということです。

this( )の使い方
　これまた初心者に厳しいところです。
　this( )は、「このインスタンス」を意味するthisとは全く関係ありません。this( )は「このクラスのコンストラクタ」という意味なんです。( )が付いただけで全然違うものを指します。

　そして、this( )はコンストラクタの中で使います。

taticな変数やメソッドにはその宣言部分にstaticと書く必要があり、何も書いていなかったら非staticだということです。
非staticなメンバというのは、インスタンス固有のメンバだということです。

このcount_Humanはインスタンスに紐付いたものではなく、一体何に紐付いた値と言えるか？？

　Humanクラス自体に紐付いた値と言えるのではないでしょうか？つまりstaticな変数count_HumanはHumanクラス固有の値と言えます。

staticはクラス固有
非staticはインスタンス固有

もう一つ、微妙にニュアンスが違うstaticの使い方として、全てのインスタンスに共通するパラメータとして使う方法があります。
 class Humanにおける
static int count_Human = 0;
    static int count_arms = 2;
    static int count_legs = 2;
    String name;                                      
    int birthday;                                     
    int manpukudo;

など

トランザクション
1.
取引。?「銀行間の―」
2.
コンピュータ システムにおける、永続的なデータに対する不可分な一連の処理。
トランザクションは一連の動作が全て正しく完了しなければならない。
１００か０。途中１つでもうまくいかなければ、もとにもどす。
実行前に戻す。ロールバックという。



・クラス：概念
・インスタンス：物体
・オブジェクト：概念や物体をふんわりと表現したもの

と、捉えるのもアリかもしれません。

こちらは例えば

クラス：スマートフォン
インスタンス：iPhoneやAndroidの実機
オブジェクト：ケータイ

のイメージでしょうか。

　メソッドを定義する時に、( )の中で変数（仮引数）を宣言することで、そのメソッドは引数を受け取ることができるメソッドになる（厳密には受け取らなければならなくなる）。
　メソッドの処理内容を定義する際に、仮引数を使って、受け取った引数をどう処理するかを定義する。
　メソッドを使う時には、後ろの( )の中に引数を入れて呼ぶ（引数を渡す）。

仮引数の名前が同じ「n」で大丈夫？混乱しないのかな？と思った方、大丈夫です。twiceメソッドの仮引数nのスコープ（変数の有効範囲）は、twiceメソッドの定義部分{ }の中だけなので、それ以外の場所で同じ変数名を使っても完全に別物として扱うことができます。もちろん違う名前にしてもいいです。

可読性

この「置き換わる」というのが「メソッド自身の場所に戻り値を返す」ということです。

　メソッド名の直前に「void」という謎の単語が書いてありますね。今まで意味が分からないまま書いていたと思います。

　戻り値を返すメソッドを定義する場合は、ここを書き替えないといけません。何に書き換えるかというと、戻り値の型です。

return 変数;
は戻り値を返すコマンド
voidだったところにbooleanとかintとかStringとか型を入れる

コマンドライン引数





