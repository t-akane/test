package com.internousdev.ecsite.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import com.internousdev.ecsite.util.DBConnector;

public class ItemListDAO {

	DBConnector dbConnector=new DBConnector();
	Connection connection=dbConnector.getConnection();

	public ArrayList<ItemListDTO> getMyPageUserInfo
		(String item_transaction_id,String user_master_id)
	throws SQLException{

		ArrayList<ItemListDTO>myPageDTO=new ArrayList<ItemListDTO>();

		String sql=
				"SELECT iit.id,iit.item_name,iit.item_price,iit.item_stock,iit.insert_date "
				+ "FROM item_info_transaction6 as iit "
				+ "ORDER BY insert_date DESC";


		try{
			PreparedStatement preparedStatement=connection.prepareStatement(sql);
			preparedStatement.setString(1, item_transaction_id);
			preparedStatement.setString(2, user_master_id);
			ResultSet resultSet=preparedStatement.executeQuery();

			while(resultSet.next()){
				ItemListDTO dto=new ItemListDTO();
				dto.setId(resultSet.getString("id"));
				dto.setItemName(resultSet.getString("item_name"));
				dto.setTotalPrice(resultSet.getString("item_price"));
				dto.setTotalCount(resultSet.getString("item_stock"));
				dto.setInsert_date(resultSet.getString("insert_date"));
				myPageDTO.add(dto);
			}

	}catch(Exception e){
		e.printStackTrace();
	}finally{
		connection.close();
	}return myPageDTO;
}
	public int buyItemHistoryDelete(String item_transaction_id,String user_master_id)
	throws SQLException{
		DBConnector dbConnector=new DBConnector();
		Connection connection=dbConnector.getConnection();

		String sql="DELETE FROM user_buy_item_transaction6 WHERE item_transaction_id=? AND user_master_id=?";
		PreparedStatement preparedStatement;
		int result=0;

		try{
			preparedStatement=connection.prepareStatement(sql);
			preparedStatement.setString(1,item_transaction_id);
			preparedStatement.setString(2,user_master_id);

			result=preparedStatement.executeUpdate();

		}catch(SQLException e){
			e.printStackTrace();
		}finally{
			connection.close();
		}
	return result;
}
}


